services:
  example:
    env_file: &env_file .env
    image: &python_image python:3.12-slim-bookworm
    working_dir: &working_dir /opt/project
    command:
      - poetry
      - run
      - python
      - manage.py
      - runserver
      - 0.0.0.0:8000
    ports:
      - 8000:8000
    volumes: &volumes
      - site_packages:/usr/local/lib/python3.12/site-packages
      - usr_local_bin:/usr/local/bin
      - poetry_cache:/root/.cache/pypoetry
      - ./src:/opt/project
      - media:/opt/project/media
    depends_on: &depends_on
      - postgres
      - redis
  celery:
    env_file: *env_file
    image: *python_image
    working_dir: *working_dir
    command:
      - poetry
      - run
      - celery
      - --app=example
      - worker
      - --task-events
      - --concurrency=1
      - --loglevel=DEBUG
    volumes: *volumes
    depends_on: *depends_on
  flower:
    env_file: *env_file
    image: *python_image
    working_dir: *working_dir
    command:
      - poetry
      - run
      - celery
      - --app=example
      - flower
      - --address 0.0.0.0
      - --port=5555
    ports:
      - 5555:5555
    volumes: *volumes
    depends_on:
      - redis
  postgres:
    env_file: *env_file
    image: postgres:alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
  pgadmin:
    env_file: *env_file
    image: dpage/pgadmin4
    configs:
      - pgadmin_servers.json
    secrets:
      - pgadmin_passfile
    ports:
      - 5050:5050
    depends_on:
      - postgres
  redis:
    image: redis:alpine
  redis-commander:
    env_file: *env_file
    environment:
      PORT: 8081
    image: ghcr.io/joeferner/redis-commander
    ports:
      - 8081:8081
    depends_on:
      - redis

volumes:
  site_packages:
  usr_local_bin:
  poetry_cache:
  pg_data:
  media:

configs:
  pgadmin_servers.json:
    file: ./pgadmin/servers.json

secrets:
  pgadmin_passfile:
    file: ./pgadmin/passfile
